#!/l/local/bin/perl -w

use strict;
use Getopt::Std;

our ($opt_a, $opt_A, $opt_h, $opt_t );
my $ops = getopts('a:Aht');

my $SDRROOT;
my $me = `whoami`;
chomp($me);
if ($opt_t) {
    $SDRROOT = "/htapps/test.babel";
}
else {
    $SDRROOT = "/htapps/$me.babel";
}


sub Usage {
    print "app-latest-submodules [-a app | -A] [-t] | [-h]
  updates submodules for apps under /htapps/$me.babel
    OPTIONS
      -a app updates just 'app'
      -A updates submodules in all apps that contain a .gitmodules file
    
      -t updates test.babel
      -h help\n";
}

if ($opt_h) {
    print Usage();
    exit 0;
}

if (! $opt_a && ! $opt_A) {
    print STDERR "supply -A or -a argument\n";
    print Usage();
    exit 1;
}
    
my @app_dirs = ();
if ($opt_A) {
    if (! opendir(DIR, $SDRROOT)) {
        print STDERR "could read $SDRROOT\n";
        exit 1;
    }
        
    @app_dirs = map { "$SDRROOT/$_" } grep(! /^(\.|\..)/, readdir(DIR));
    closedir(DIR);
}
else {
    @app_dirs = ($SDRROOT/$opt_a);
}

foreach my $app_dir (@app_dirs) {
    next if (! -e "$app_dir/.gitmodules");
    
    if (! chdir($app_dir)) {
        print STDERR "could not cd to $app_dir\n";
        exit 1;
    }
    print "\n\n--- processing $app_dir ---\n";
    print `git submodule foreach git pull -v`;
}

exit 0;

    

