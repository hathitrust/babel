#!/l/local/bin/perl

use strict;
use Getopt::Std;

use lib "$ENV{SDRROOT}/mdp-lib/Utils";
use Vendors;

use ToolLib;

our ($opt_A, $opt_h, $opt_v );
my $ops = getopts('Ahv');
my $app = shift;

sub Usage {
    print "git-commit-push-submodules [options] <app> | -A
  commit and push currently checked out submodule commits whose SHA-1 does not match 
  that found in the index of the containing repository for one or all apps under /htapps/developer.babel
      -A do submodules in all apps that contain a .gitmodules file
    OPTIONS
      -h help
      -v verbose\n";
}

if ($opt_h) {
    print Usage();
    exit 0;
}

if (! $app && ! $opt_A) {
    print STDERR "supply -A option or <app>\n";
    print Usage();
    exit 1;
}

$ToolLib::VERBOSE = $opt_v;

my ($repo_root, $app_root) = get_HTDE_roots();

my @app_dirs = ();
if ($opt_A) {
    @app_dirs = ToolLib::get_app_dir_list($app_root);
}
else {
    @app_dirs = ("$app_root/$app");
}

foreach my $app_dir (@app_dirs) {
    next if (! -e "$app_dir/.gitmodules");

    if (! chdir_to_app_dir($app_dir)) {
        exit 1;
    }

    my $branch = `git branch`;
    if ($branch !~ m,\* master,s) {
        print "\nMASTER BRANCH NOT CHECKED OUT in $app_dir ... skipping\n";
        next;
    }

    PrintY("\n--- commit and push submodules under $app_dir ---\n");

    my @submodules = `git submodule status`;
    # Grab submodules whose SHA1 begins with a '+'
    @submodules = map { $_ =~ m,^\+.*?\s+(.*?)\s+.*?$,; "$1" } @submodules;
    
    my $subs;
    my $commit_push = 0;
    foreach my $sub (@submodules) {
        if ($sub) {
            print "\tStaging: $sub\n";
            execute_command(qq{git add $sub});
            $subs .= "$sub ";
            $commit_push = 1;
        }
    }

    if ($commit_push) {
        print "\tCommit ...\n";
        execute_command(qq{git commit -m"Updating submodules: $subs"});
        print "\tPush ...\n";
        execute_command(qq{git push origin master});
    }
    else {
        print "\tNo submodules need updates\n";
    }
}

exit 0;



