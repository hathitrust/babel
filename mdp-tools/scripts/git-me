#!/l/local/bin/perl

=head1 NAME

git-me - Keep an app in sync with the upstream

=head1 SYNOPSIS

git-me <app>

=head1 OPTIONS

=over 8

=back

=head1 DESCRIPTION

B<git-me> checkout the master branch, fetch objects, rebase to
origin/master ans update submodules.

=cut

use strict;
use Getopt::Std;

use lib "$ENV{SDRROOT}/mdp-lib/Utils";
use Vendors;

use ToolLib;
$| = 1;

sub git_me_app_usage {
    my $s = qq{Usage: git-me <app> [<branch>]
           where <app> is the application to sync with the upstream
                 <branch> is optional, defaults to 'master'\n};
    return $s;
}


my $app = shift;
if (! $app) {
    print git_me_app_usage();
    exit 1;
}

my $branch = shift || 'master';

my ($repo_root, $app_root) = get_HTDE_roots();

PrintY("Sync $app on branch=$branch with upstream\n");

if (! validate_existing_app($repo_root, $app_root, $app)) {
    print git_me_app_usage();
    exit 1;
}

my $app_dir = "$app_root/$app";

if (! chdir_to_app_dir($app_dir)) {
    print git_me_app_usage();
    exit 1;
}

$ToolLib::VERBOSE = 1;

exit 1 if (! execute_command("git checkout $branch"));
exit 1 if (! execute_command("git fetch origin master"));
exit 1 if (! execute_command("git rebase origin/master"));
exit 1 if (! execute_command("git submodule update --init"));

exit 0;

__END__;

