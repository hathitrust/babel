#!/usr/bin/env perl

=head1 NAME

report_dapi_key_expiration

=head1 USAGE

% report_dapi_key_expiration

=head1 DESCRIPTION

Sends a report to admins for Data API users having higher levels of
authorization whose keys are about to expire.

=head1 SUBROUTINES

=over 8

=cut

use strict;
use warnings;

use File::Basename;
use Getopt::Std;
use Mail::Mailer;

use lib dirname(__FILE__) . "/../../mdp-lib/Utils";
use Vendors;

use Utils;
use Database;
use MdpConfig;

use API::HTD_Log;
use API::HTD::HCodes;


my $DEBUG = 0;

my $PREFIX = ($ENV{HT_DEV} || $DEBUG) ? 'test_' : '';
my $CONFIG = new MdpConfig($ENV{SDRROOT} . '/htd/lib/Config/global.conf');

my $LEAD_TIME = 30; # days

sub ck_du_usage {
    return qq{\nUsage: report_dapi_key_expiration\n\n};
}

# Database connection
my $db = new Database('ht_web');
my $DBH = $db->get_DBH();

__report_expiring_user_keys();
# POSSIBLY NOTREACHED

exit 0;



# ---------------------------------------------------------------------

=item __report_expiring_user_keys

Description

=cut

# ---------------------------------------------------------------------
sub __report_expiring_user_keys {

    my $ref_to_arr_of_hashref;
    my $statement = qq{SELECT htd_authorization.access_key, name, userid, code, htd_authorization.expires FROM htd_authentication INNER JOIN htd_authorization ON htd_authentication.access_key = htd_authorization.access_key WHERE expires < (NOW() + INTERVAL $LEAD_TIME DAY)};

    eval {
        my $sth = DbUtils::prep_n_execute($DBH, $statement);
        $ref_to_arr_of_hashref = $sth->fetchall_arrayref({});
    };
    if ($@) {
        hLOG("ERROR: report_dapi_key_expiration statement=$statement fails. database error: $@");
        exit 1;
    }

    exit 0 unless (scalar @$ref_to_arr_of_hashref);

    # Now report these users to the admins.
    my $expiring_users = [];
    
    foreach my $hashref (@$ref_to_arr_of_hashref) {
        my $user_name = $hashref->{name} . ' ' . $hashref->{userid};
        Utils::trim_spaces(\$user_name);
        
        my $code = $hashref->{code};
        my ($access_type) = API::HTD::HCodes::get_access_type_from_code($code);
        $access_type =~ s/-/, /g;
        
        my $ref = { $user_name => $hashref->{expires} . " allowed access types: $access_type" };
        
        push(@$expiring_users, $ref);
        
        print "$user_name " . $ref->{$user_name} . "\n" if ($DEBUG || $ENV{TERM});
    }
    print "Done.\n" if ($DEBUG || $ENV{TERM});

    my $data = '';
    foreach my $u (@$expiring_users) {
        my ($name, $stuff) = each %$u;
        $data .= "$name expires: $stuff\n"
    }
    send_expiration_email($data);
}


# ---------------------------------------------------------------------

=item send_expiration_email

Description

=cut

# ---------------------------------------------------------------------
sub send_expiration_email {
    my $data = shift;

    my $config = new MdpConfig($ENV{SDRROOT} . '/htd/lib/Config/global.conf');
    my $admin_email = $config->get($PREFIX . 'hathitrust_admin_email');
    my $admin_cc_email = $config->get($PREFIX . 'hathitrust_admin_cc_email');

    my $mailer = new Mail::Mailer('sendmail', ('-t', '-f hathitrust-system@umich.edu'));
    $mailer->open({
                   'To'       => $admin_email,
                   'Cc'       => $admin_cc_email,
                   'From'     => 'hathitrust-system@umich.edu',
                   'Subject'  => "Data API user keys nearing expiration",
                  });

    my $body = qq{These users listed below have Data API keys authorizing special access.  Their keys will expire in $LEAD_TIME days.  The keys are stored in the htd_authorization table. Please review and update their expiration dates or remove them from the table.\n\nThere is a stored procedure you can call from mysql as "CALL htdauth()" that joins htd_authorization to htd_authentication for ease of listing more complete data.\n\n$data\n\n  -- report_dapi_key_expiration cron job};

    print $mailer($body);
    $mailer->close;
    hLOG("EVENT: report_dapi_key_expiration report email sent to $admin_email, $admin_cc_email data=\n$data");
}



=head1 AUTHOR

Phillip Farber, University of Michigan, pfarber@umich.edu

=head1 COPYRIGHT

Copyright 2015 Â©, The Regents of The University of Michigan, All Rights Reserved

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject
to the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

=cut
