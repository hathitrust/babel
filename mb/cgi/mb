#!/usr/bin/env perl

=head1 NAME

MBooks main program (mb)

=head1 USAGE

http://mdp.lib.umich.edu/cgi/m/mdp/mb? ... URL parameters ...

=head1 DESCRIPTION

This is the MBooks application supporting user-defined collection
creation, maintenance and searching.

=head1 OPTIONS

=over 8

=item debug=opt1,opt2,...,optN

Debug options

=back

=cut

use strict;
umask 0000;

#BEGIN {
#    if ( $ENV{HTTP_USER_AGENT} =~ m,^MB/0.1/, ) {
#        my @tmp = split(/\//, $ENV{HTTP_USER_AGENT});
#        $ENV{REMOTE_USER} = $tmp[-1];
#    }
#}


BEGIN {
    ## $ENV{DEBUG_LOCAL} = 1;

    ( delete $ENV{HT_DEV}, $ENV{UNAVAILABLE} = 1) if (-e "$ENV{SDRROOT}/mb/UNAVAILABLE");
}

# ----------------------------------------------------------------------
# Set up paths for local libraries -- must come first
# ----------------------------------------------------------------------
use lib "$ENV{SDRROOT}/mdp-lib/Utils";
use Vendors;

# ----------------------------------------------------------------------
# Performance check-pointing
# ----------------------------------------------------------------------

BEGIN {
    ( $main::realSTART ) = time;
}


BEGIN {
    if ( $ENV{'HT_DEV'} ) {
        # Set the SDRINST and SDRLIB environment variables in auth
        # system absence.
        require Auth::Surrogate;
        Auth::Surrogate::authorize('/mb/cgi');
    }
}


use CGI;

# Magic
use Attribute::Handlers;

# MBooks
use MdpGlobals;
use Utils;
use Debug::DUtils;


use App;
use Database;
use MdpConfig;
use Action::Bind;
use Context;
use Session;
use Auth::Auth;
use Access::Rights;

use MBooks::Controller;
use MBooks::FacetConfig;

$::VERSION = 1.1200;

$debug::t0 = Time::HiRes::time();

# ============================ Main ===================================

#
# Establish and populate the Context.  Order dependent.
#
my $C = new Context;

# CGI
my $cgi = new CGI;
Utils::clean_cgi_params($cgi);
$C->set_object('CGI', $cgi);

#
# Create the application
#
my $app = new App($C, 'mb');
$C->set_object('App', $app);

# configuration
my $config = new MdpConfig(
                           Utils::get_uber_config_path('mb'),
                           $ENV{SDRROOT} . "/mb/lib/Config/global.conf",
                           $ENV{SDRROOT} . "/mb/lib/Config/local.conf"
                          );
$C->set_object('MdpConfig', $config);

# additional configuration for facets and relevance weighting
my $facet_config =
  new MBooks::FacetConfig( $C, $ENV{SDRROOT} . "/mb/lib/Config/facetconfig.pl" );
$C->set_object( 'FacetConfig', $facet_config );

# Database connection
my $db = new Database('ht_web');
$C->set_object('Database', $db);

# Session
my $ses = Session::start_session($C);
$C->set_object('Session', $ses);

# Auth
my $auth = new Auth::Auth($C);
$C->set_object('Auth', $auth);

#
# Create the application Controller (main logic) class
#
my $ctl = new MBooks::Controller($C);

#
# Run the application on the framework classes
#
$app->run_application($C, $ctl);

exit 0;




=head1 AUTHOR

Phillip Farber, University of Michigan, pfarber@umich.edu

=cut
