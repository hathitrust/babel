services:
  stage-item:
    # Does not need to come up each time but it's a usful utility for front and back end development.
    build: ../../stage-item
    # no explicit depends-on - the stage item script will start catalog, traject, etc as needed
    volumes:
    - ${BABEL_HOME}:/usr/src/babel
    - gem_cache:/gems
    - /var/run/docker.sock:/var/run/docker.sock
    environment:
    - CATALOG_SOLR=http://solr-sdr-catalog:9033/solr/catalog
    - LSS_SOLR=http://solr-lss-dev:8983/solr/core-x
    - MYSQL_URL=mysql2://mdp-admin:mdp-admin@mysql-sdr:3306/ht

  traject:
    # This is a back end service. Used for preparing solr sample catalog data. Talk with LS about this too. ONly used as apart of the metadata processing workflow and here to create a sample catalog. Take a look at the readme maybe.
    build: ../../hathitrust_catalog_indexer
    environment:
    - SOLR_URL=http://solr-sdr-catalog:9033/solr/catalog
    - redirect_file=/dev/null
    - NO_DB=1
    - DDIR=/app/metadata
    volumes:
    - ${BABEL_HOME}/sample-data/metadata:/app/metadata
    - ${BABEL_HOME}/hathitrust_catalog_indexer:/app
    - gem_cache:/gems

  slip:
    # This is a backend service. Full text indexing. Check in with lainete
    build: ../../slip
    image: hathitrust-slip
    user: ${CURRENT_USER}
    volumes:
    - ${BABEL_HOME}:/htapps/babel
    # this is where docs-j saves output
    - ${BABEL_HOME}/slip/sample:/htapps/babel/logs/tmp
    - ${BABEL_HOME}/sample-data/sdr1:/sdr1
    - ${BABEL_HOME}/sample-data/etc:/htapps/babel/etc
    - ${BABEL_HOME}/sample-data:/tmp/sample-data
    - ${BABEL_HOME}/logs:/var/log/babel
    environment:
    - SDRROOT=/htapps/babel
    - SDRDATAROOT=/sdr1
    - HT_DEV=docker
    depends_on:
      mysql-sdr:
        condition: service_healthy
      solr-sdr-catalog:
        condition: service_healthy
      solr-lss-dev:
        condition: service_healthy
    command: bash
